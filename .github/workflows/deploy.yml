name: Deploy lshworkspace-proxy to Master Clusters

on:
  push:
    branches:
      - main
  pull_request:
    branches: 
      - develop
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Log level'     
        required: true
        default: 'warning'
      tags:
        description: 'Test scenario tags'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2

    - name: Docker Setup Buildx
      # You may pin to the exact commit or the version.
      # uses: docker/setup-buildx-action@f95db51fddba0c2d1ec667646a06c2ce06100226
      uses: docker/setup-buildx-action@v3.0.0
      # with:
        # Buildx version. (eg. v0.3.0)
        # version: # optional
        # Sets the builder driver to be used
        # driver: # optional, default is docker-container
        # List of additional driver-specific options. (eg. image=moby/buildkit:master)
        # driver-opts: # optional
        # Flags for buildkitd daemon
        # buildkitd-flags: # optional, default is --allow-insecure-entitlement security.insecure --allow-insecure-entitlement network.host
        # Sets up docker build command as an alias to docker buildx build
        # install: # optional, default is false
        # Switch to this builder instance
        # use: # optional, default is true
        # Optional address for docker socket or context from `docker context ls`
        # endpoint: # optional
        # Fixed platforms for current node. If not empty, values take priority over the detected ones
        # platforms: # optional
        # BuildKit config file
        # config: # optional
        # Inline BuildKit config
        # config-inline: # optional
        # Append additional nodes to the builder
        # append: # optional
        # Cleanup temp files and remove builder at the end of a job
        # cleanup: # optional, default is true

    - name: Docker Login
      # You may pin to the exact commit or the version.
      # uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d
      uses: docker/login-action@v3.0.0
      with:
        # Server address of Docker registry. If not set then will default to Docker Hub
        # registry: # optional
        # Username used to log against the Docker registry
        username: ${{ secrets.DOCKER_USERNAME }} # optional
        # Password or personal access token used to log against the Docker registry
        password: ${{ secrets.DOCKER_TOKEN }}# optional
        # Specifies whether the given registry is ECR (auto, true or false)
        # ecr: # optional, default is auto
        # Log out from the Docker registry at the end of a job
        logout: true # optional, default is true
        
    - name: Build and push Docker images
      # You may pin to the exact commit or the version.
      # uses: docker/build-push-action@0565240e2d4ab88bba5387d719585280857ece09
      uses: docker/build-push-action@v5.0.0
      with:
        # List of a customs host-to-IP mapping (e.g., docker:10.180.0.1)
        # add-hosts: # optional
        # List of extra privileged entitlement (e.g., network.host,security.insecure)
        # allow: # optional
        # List of attestation parameters (e.g., type=sbom,generator=image)
        # attests: # optional
        # List of build-time variables
        # build-args: # optional
        # List of additional build contexts (e.g., name=path)
        # build-contexts: # optional
        # Builder instance
        # builder: # optional
        # List of external cache sources for buildx (e.g., user/app:cache, type=local,src=path/to/dir)
        # cache-from: # optional
        # List of cache export destinations for buildx (e.g., user/app:cache, type=local,dest=path/to/dir)
        # cache-to: # optional
        # Optional parent cgroup for the container used in the build
        # cgroup-parent: # optional
        # Build's context is the set of files located in the specified PATH or URL
        context: . # optional
        # Path to the Dockerfile
        file: ./Dockerfile # optional
        # List of metadata for an image
        # labels: # optional
        # Load is a shorthand for --output=type=docker
        # load: # optional, default is false
        # Set the networking mode for the RUN instructions during build
        # network: # optional
        # Do not use cache when building the image
        # no-cache: # optional, default is false
        # Do not cache specified stages
        # no-cache-filters: # optional
        # List of output destinations (format: type=local,dest=path)
        # outputs: # optional
        # List of target platforms for build
        # platforms: # optional
        # Generate provenance attestation for the build (shorthand for --attest=type=provenance)
        # provenance: # optional
        # Always attempt to pull all referenced images
        # pull: # optional, default is false
        # Push is a shorthand for --output=type=registry
        push: true # optional, default is false
        # Generate SBOM attestation for the build (shorthand for --attest=type=sbom)
        # sbom: # optional
        # List of secrets to expose to the build (e.g., key=string, GIT_AUTH_TOKEN=mytoken)
        # secrets: # optional
        # List of secret files to expose to the build (e.g., key=filename, MY_SECRET=./secret.txt)
        # secret-files: # optional
        # Size of /dev/shm (e.g., 2g)
        # shm-size: # optional
        # List of SSH agent socket or keys to expose to the build
        # ssh: # optional
        # List of tags
        tags: lshworkspace/lshworkspace-proxy:$(date +%s) # optional
        # Sets the target stage to build
        # target: # optional
        # Ulimit options (e.g., nofile=1024:1024)
        # ulimit: # optional
        # GitHub Token used to authenticate against a repository for Git context
        # github-token: # optional, default is ${{ github.token }}

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - name: SSH to Master cluster
      uses: appleboy/ssh-action@v0.5.4
      with:
        host: ${{ vars.SERVER_IPADDR }}
        username: ${{ secrets.SSH_USERNAME }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        script: |
          docker pull lshworkspace/lshworkspace-proxy:latest
          # Check if the service already exists
          if ! docker service ls --filter "name=${{ vars.SERVICE_NAME }}" | grep -q "${{ vars.SERVICE_NAME }}"; then
            # Deploy Nginx service with 2 replicas
            docker service create --replicas 2 --name ${{ vars.SERVICE_NAME }} -p 80:80 lshworkspace/lshworkspace-proxy:latest
          fi
          docker service update --log-driver local --log-opt local-file=/var/log/nginx ${{ vars.SERVICE_NAME }}
          docker service update --image lshworkspace/lshworkspace-proxy:latest --update-parallelism 1 --update-delay 30s ${{ vars.SERVICE_NAME }}
      env: 
        SERVICE_NAME: ${{ vars.SERVICE_NAME }}
