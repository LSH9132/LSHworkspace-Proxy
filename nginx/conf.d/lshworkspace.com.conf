# resolver 127.0.0.1 ipv6=off valid=40s;

# upstream docker-was {
#   server lshworkspace-was:3000 max_fails=3 fail_timeout=2s;
#   keepalive_timeout 300s;
#   keepalive 20;
# }

server {
  listen 80;
  listen [::]:80;

  server_name lshworkspace.com;

  sendfile on;
  keepalive_timeout 65;

  # 점검처리
  proxy_intercept_errors on; # 백엔드 요청 가로채기
  # error_page 500 502 503 504 =503 @maintenance;
  error_page 500 502 503 504 =503 /maintenance.html;

  location / {
    # return 404;

    # docker front-network로 프록시 패스
    # proxy_pass http://docker-was;


    # TODO 프록시 패스 새롭게 만들기

    # resolver 127.0.0.11;
    # proxy_connect_timeout 15;

    resolver 127.0.0.11 valid=10s;   # 10초 동안 캐시된 IP를 사용
    resolver_timeout 2s;  # DNS 요청 타임아웃을 2초로 설정 (재시도 간격)

    set $dockerwas lshworkspace-was:3000;
    proxy_pass http://$dockerwas;


    # root /usr/share/nginx/maintenance;

    # index index.html index.htm;
    # try_files $uri $uri/ /index.html;


    proxy_set_header Host $http_host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
  }

  location = /maintenance.html {

    root /usr/share/nginx/html;

    # index index.html index.htm;
    # try_files $uri $uri/ /index.html;

    # return 503;

    # proxy_pass https://lshworkspace.com;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;

    add_header 'Access-Control-Allow-Origin' 'http://static.lshworkspace.com https://static.lshworkspace.com http://maintenancepage.lshworkspace.com https://maintenancepage.lshworkspace.com';
    add_header 'Access-Control-Allow-Methods' 'GET, POST';

    add_header Retry-After 3600 always;
    internal;
    # break;
  }



#   location /robots.txt {
#     return 200 "User-agent: *\nDisallow: /";
#   }
}

log_format	lshworkspace	'$remote_addr - $remote_user [$time_local] "$request" '
											'$status $body_bytes_sent "$http_referer" '
											'$http_user_agent" "$http_x_forwarded_for"';

access_log  /var/log/nginx/access.log  lshworkspace;
